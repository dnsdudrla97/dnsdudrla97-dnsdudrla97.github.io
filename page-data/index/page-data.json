{
    "componentChunkName": "component---src-pages-index-js",
    "path": "/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"ad736f49-eb3e-5545-a7cb-d869773bd0e6","excerpt":"The Loader  를 로드하고 로더와 상호 작용 하는 방법에 대해 알아보자 예제로 사용할 바이너리는 다음 링크에서 다운로드: dnsdudrla97/angr-doc Loaded Objects CLE 로더 (cle.Loader)는 로드된 바이너리 객체의 전체 그룹을 나타내며 단일 메모리 공간에 로드되고 매핑된다. 각 바이너리 객체는 파일 형식(cle.Backend의 subclass)을 처리할 수 있는 loader backend에 의해 로드된다. 예를 들어, cle.ELF 는 ELF 바이너리 파일을 로드 하는 데 사용된다. 메모리에 로드된 바이너리 수 와 일치하지 않는 객체도 있을 것이며 예를 들어,  지원을 제공하는 데 사용되는 객체와 확인되지 않은 Symbols을 제공하는데 사용되는 외부 객체 CLE가  와 함께 로드한 전체 목록뿐만 아니라 다음과 같이 몇 가지 추가 표적 분류도 얻을 수있다. 해당 객체들과 직접 상호 작용하여 메타 데이터를 추출 할 수 있다. Symbols an…","frontmatter":{"categories":"AnalyzingBinaries","title":"angr 바이너리 분석 활용 방안 2","date":"August 14, 2020"},"fields":{"slug":"/angr-2_theori/"}}},{"node":{"id":"a1cbd834-e57e-573a-b4e3-0cc76df63a00","excerpt":"angr fauxware 문제 풀이 문제 바이너리 dnsdudrla97/angr-doc data 섹션  authenticate 함수   전역 변수가 가리키고 있는 문자열 과 유저 이름을  함수를 바탕으로 비교를 통해 같으면 1을 반환하고 아닐시 유저 이름에 해당 하는 파일 이름을  함수를 바탕으로 읽고 해당 값과 유저 패스워드와 비교하여 같으면 1을 반환 아니면 0을 반환한다. 우리가 피해야할 주소 값은  임을 알 수있다.  접근해야 하는 위치  기본적으로 앞에서  함수에서 반환된 값이 1 일 경우  함수를 호출하게 된다.  angr solve 1  angr sovle 2  data 섹션 authenticate 함수 접근해야 하는 위치 angr solve 1 angr sovle 2","frontmatter":{"categories":"AnalyzingBinaries","title":"angr 바이너리 분석 활용 방안 3","date":"August 14, 2020"},"fields":{"slug":"/angr-3_theori/"}}},{"node":{"id":"a9a71278-4019-5d76-9ba3-007bc03a8391","excerpt":"취약점 분석 안드로이드 앱의 시작점  MainActivty1  k() 의 반환값이 False 이면 앱 종료 K 함수 분석 빌드 네임이 아래 중 하나 조건에 맞으면 통과  MainActivity2 intent 요청 조건 분석  Button을 누르면 길이가 (10 ≥ && ≤ 26) 일 경우 Main2Activity 를 호출 MainActivity2  MainActivty에서 입력 받은 edittext 를 stringExtra 변수에 저장 obj에 Main2Activity에서 입력하는 값을 저장하고  함수를 stringExtra로 실행한 값과 일치하는지 비교한다. MainActivty에서 입력한 값이 id, Main2Acticity에서 입력한 값이 password인 것을 확인할 수 있다. MainActivity2 a 함수 분석 입력 받은 str(id) 를 갖고 xor 연산을 하면서  연산하는 함수 MainActivity3 분석   함수 반환 값과 Main3Activity 에서 입력하는…","frontmatter":{"categories":"Mobile","title":"Droid APK 취약점 연구","date":"August 14, 2020"},"fields":{"slug":"/droidCTF_droid_ctf_writeup/"}}},{"node":{"id":"63ac0101-7bca-525d-8b12-a5fa8beb3168","excerpt":"바이너리 정보 main 함수 분석 Undefined (U) → Create String (a) → WOW String     인코딩되어진 값을 확인할 수 있다. 사용자 입력을 27바이트를 받으며  ~  까지 함수 호출 과정이 끝나고  를 호출하는 것을 확인할 수 있다. ptrace Anti-Debugging    함수는 인자  을 받으며 호출되며 반환 되는 값이  값 즉,  과 비교되어 0 이 아니게 되면 정상 루틴이 아닌 다른 루틴으로 빠지는 것을 확인할 수 있었다.  의  옵션은 자기 자신에게 디버거를 붙이라는 의미로서 해당 코드에서는 의 결과가 -1인지 검사하고 참이라면 유효하지 않은 코드 영역으로 점프를 하게 된다. 즉 안티 디버깅을 하기 위해  하는 것이다.  안티 디버깅 검사를 마친 후에 다시  ~  까지 함수를 이용하여 입력값 검증을 시도한다.   함수의 반환 값을 인자로 삼아  함수가 호출되는 것을 확인할 수 있으며,   함수를 바탕으로 rax레지스터 즉, 검증 함수…","frontmatter":{"categories":"CTF","title":"CodeGate2018 RedVelvet write-up","date":"August 14, 2020"},"fields":{"slug":"/codegate2018_redvelbet_ctf_writeup/"}}},{"node":{"id":"eadfc36a-427f-5be4-b01b-4ce12d71c3c6","excerpt":"취약점 분석 바이너리 정보  바이너리 실행  입력 값을 받을 수 있도록 하며 임의의 문자열을 입력할 시  해당 문자열을 출력하는 것을 알 수 있다.    함수 호출 인자 , ,   함수 호출 인자 , ,  str1에 있는 문자열에서 str2 문자가 있을 경우 그 문자 까지의 개수를 리턴한다.  flag 값을 얻기 위해서는  함수를 거쳐서 반환 값이 1이어야 한다. 반환 값을 얻기 까지의 조건들이 너무 더럽다…  해당 조건을 디컴파일 한 결과 조건을 만족할 시 반환 되는 값은 1이다. 문제 제목 처럼 Z3를 통해 풀어보도록 하겠다. 해결 방안 SAT (Boolean SATisfiability problem) 주어진 Boolean 식을 충족시키는 해 (True로 표현되는 해)가 존재하는지 결정하는 문제 SAT는 명제논리식이기 때문에 각 변수에 True/False만 할당한다. 바이너리 정보 바이너리 실행","frontmatter":{"categories":"CTF","title":"Sharky CTF Z3 Robot","date":"August 14, 2020"},"fields":{"slug":"/sharkyCTF_z3z3_ctf_writeup/"}}},{"node":{"id":"2dc19ec9-63a6-5f68-aff2-ea70f9c0a6e9","excerpt":"프로젝트 선택 loader 이진 파일에서 가상 주소 공간에서 표현하는 것은 매우 복잡하다. 이를 처리하기 위하여 CLE 모듈이 있다. 로더라고 하는 CLE의 결과는 속성에서 사용할 수 있으며  프로그램과 함께 로드된 공유 라이버리를 보고 로드된 주소 공간에 대한 기본 쿼리를 숭행하는데 사용할 수 있다. p.factory (생성자들)  에는 많은 클래스가 있으며 대부분 프로젝트를 인스턴스화해야 한다. 모든 곳에서 프로젝트를 사용할 시 자주 사용하고 싶은 공통 객체에 대한 몇 가지 편리한 생성자를 제공한다.  block  주어진 주소에서 기본 코드 블록을 추출하는데 사용된다. state 객체는 프로그램의 “초기화 이미지” 만을 나타낸다.  로 실행을 수행할 때 시뮬레이션 된 프로그램 상태를 나타내는 특정 개체인  로 작업한다.  는 프로그램의 메모리, 레지스터, 파일 시스템 데이터를 포함하고 있다. 해당 값들은 파이썬의 정수가 아니다. 이다. 파이썬 정수는 CPU의 단어와 동일한 의미…","frontmatter":{"categories":"AnalyzingBinaries","title":"angr 바이너리 분석 활용 방안 1","date":"August 14, 2020"},"fields":{"slug":"/angr-1_theori/"}}},{"node":{"id":"e98f71b9-6f47-5a3d-935b-b2842c7c857d","excerpt":"GDB 명령어 및 함수 정리 시작 도움말 Breakpoints Stack Backtrace 소스내부 Data GDB 명령어 및 함수 정리 시작 도움말 Breakpoints Stack Backtrace 소스내부 Data","frontmatter":{"categories":"Tools","title":"GDB cheat sheet","date":"June 09, 2020"},"fields":{"slug":"/gdb_tools/"}}},{"node":{"id":"732469bd-2e89-5f14-b6a3-db94ed3a72b3","excerpt":"프록시 설정 방법 크롬 브라우저 위주 설정 (크롬 설정 → 시스템)  수동 프록시 설정 기본적으로 127.0.0.1:8080을 사용한다.  Burp Suite CA 인증서 설치 과정 (Chrome 인증 과정) Burp Suite를 바탕으로 SSL/TLS 암호화 기반의 HTTPS 웹 사이트를 탐색 할 경우 프록시는 인증 기관 (CA)으로 공유키 인증서로 서명된 각 호스트에 대해 SSL 인증서를 생성하게 된다.  CA 으로 발급된 인증서는 Burp Suite를 처음 구동하였을 때 로컬 환경에 저장이 된다. HTTPS 웹 사이트에서 Burp Suite Proxy를 사용하려면 브라우저에서 Burp Suite CA 인증서를  에 설치를 해야 된다. Burp Suite CA 인증서 발급 과정 Burp Suite 프록시 서버를 기점으로 로컬 환경 프록시가 세팅되어 있는 상태 Burp Suite CA 다운로드 크롬 웹 브라우저를 실행 시킨 후 주소창에  를 입력한다. Burp Suite 웹 사이…","frontmatter":{"categories":"troubleshooting","title":"BurpSuite 인증서 설치 방법","date":"June 06, 2020"},"fields":{"slug":"/BurpSuite_tbs/"}}},{"node":{"id":"11e31e7e-8f1d-5d7e-9978-d3a4987d44fe","excerpt":"Metasploit 아키텍처 Metasploit은 Ruby로 작성되었으며 수년 동안 개발되었다. 언뜻보기에 프로젝트의 규모는 어려울 수 있지만 아키텍처를 깊게는 파고들 필요가 없다.  Metasploit 파일 시스템 및 라이브러리에 익숙해지면 좀더 능숙하게 작성할 수 있겠다. Kali Linux에서 Metasploit은 metasploit-framework 패키지로 제공되며  디렉토리에 설치된다. Metasploit FileSystem MSF 파일 시스템은 직관적 인 방식으로 배치된다. Data Data 디렉터리는 특정 공격, 단어 목록, 이미지 및 더 필요한 바이너리에 MSF에서 사용하는 편집 가능한 파일이 포함되어 있다. Documentation Documentation 디렉터리에는 프레임 워크에 사용 가능한 문서가 포함된다. LIB LIB 디렉터리는 프레임 워크 코드 기반의 라이브리들이 포함 된다. Module Module 은 공격, 보조 및 사후 모듈, 페이로드, 인코더, …","frontmatter":{"categories":"Tools","title":"Metasploit 아키텍처 및 파일 시스템 구조 이해","date":"June 05, 2020"},"fields":{"slug":"/Metasploit2_theori/"}}},{"node":{"id":"a28b5e01-0cbc-5e7d-8a57-bac2d88809d6","excerpt":"하드 드라이브 공간 10 GB 이상의 사용 가능한 저장 공간 대용량 파일 시스템을 지원하는 NTFS, EXT3 또는 기타 파일 시스템 형식을 선택 해야 한다. 필요한 권장 공간 30 GB 정도 사용 가능한 메모리 호스트 OS에 RAM과 각 가상 머신에 할당하는 RAM의 충분한 양이 필요한다. Linux 호스트 최소 메모리 요구 사항 1GB의 시스템 메모리 (2GB 정도면 적당) Kali Linux Guest 최소 메모리 요구 사항 최소 1GB의 RAM (2GB 권장) 프로세서 64 bit 쿠드 코어 CPU 이상을 권장한다. AWS (Amazon Web Server) 상에서 칼리 리눅스, 메타스폴로잇을 구동을 하여 외부 서비스를 점검을 하게 된다. 대외적으로 클라우드 서비스 환경에서도 올려 사용하고 있다. METASPLOITABLE (피해자 환경) 악용 프레임 위크를 사용하는 방법을 배울 때 발생하는 문제 중 하나는 검색하고 공격 할 대상을 찾고 구성하는 것 해당 이미지는 의도적으로…","frontmatter":{"categories":"Tools","title":"Metasploit 환경 구성","date":"June 05, 2020"},"fields":{"slug":"/Metasploit1_theori/"}}},{"node":{"id":"c84a2764-f589-5841-87d8-3db17c294c1d","excerpt":"윈도우 실행 파일 구조 PE 파일 (Portable Excutable) 다양한 정보를 포함한 커다란 구조체들로 이루어져 있다. 수만은 테이블과 멤버들을 포함하고 있다. PE 파일의 종류 종류 설명 EXE 실행파일 SCR 실행파일 (화면 보호기) DLL 라이브러리 OCX 라이브러리 (ActivieX) SYS 시스템 드라이버 OBJ 오브젝트 파일 SCR 파일이 실행 파일임을 인지 하지 못한채 악성 코드로 동작하게 되어 피해가 발생한 경우가 다수 첫 바이트 부터 시작된다. PE 파일은 파일에 존재할 때의 구조와 메모리에 로드된 후의 모습이 달라진다. 파일에서는 첫 바이트부터의 거리를 offset을 사용한다. 메모리에서는 VA(Virtual Address), RVA(Relative Virtual Address, 상대적 가상 주소) 고정 주소 대신 상대 주소를 사용하는 이유는 해당 PE 파일이 메모리에 로드 될 때 한 주소에 고정적으로 로딩되는 것이 아니기 떄문이다. 메모리에 로드된 후에 …","frontmatter":{"categories":"Windows Theory","title":"Windows PE","date":"June 02, 2020"},"fields":{"slug":"/windowPE_theori/"}}},{"node":{"id":"20fc7bd8-cb14-5f2a-95a9-bd2eee50cee4","excerpt":"취약점 사용자에게 허용된 권한 이상의 동작이나 정보 열람을 가능하게 하는 소프트웨어의 설계상의 허점이나 결함 소프트웨어, 하드웨어, 절차 및 관리 등 넓은 의미를 예기하지만 중점은 기술적 소프트웨어 결함 을 통한 취약점 발생 여부이다. Exploit 취약점이 발견되면 해당 취약점을 공격하여 원하는 코드를 실행하거나 툭정 목적을 달성하는 공격 코드 또한 공개 된다. 이런 취약점 공격 코드를 Exploit이라 부르며 이러한 공격 코드를 이용한 공격 행위 일체를 포함하기도 한다. Exploit 공개 범위 유로 Exploit 무료 Exploit 악의적인 Exploit (공개 X) Offensive Security’s Exploit Database Archive 취약점 발견 및 패치 발견되는 취약점인 경우 대부분이 연구 목적으로 공개가 되어 지면서 동시에 해당 취약한 제품을 다루는 기업들은 그에 맞춰 패치가 이뤄진다. 하지만 취약점을 악의적으로 사용할 경우 공개를 하지 않고 서 군사적 일부…","frontmatter":{"categories":"Talk","title":"Exploit, 취약점 ?","date":"June 01, 2020"},"fields":{"slug":"/vuln_exploit_talk/"}}},{"node":{"id":"c48e199e-c684-5a7d-bbda-025aa1599bd3","excerpt":"Lua 언어 정리 주석 처리 변수 처리 모든 수는 double 형으로 받는다. 64bit double 형에는  총 52bit의 정수값을 저장할 수 있다. 코드 블록 표기법 블록은 do, end로 표기된다. 변수 및 흐름제어 함수 테이블 테이블은 루아의 유일한 합성 자료 구조이다. 테이블은 연관 배열이다. php 배열, 자바스크립트 객체와 비슷하다. 테이블은 리스트로도 사용될 수 있는 해시 참조 사전이다. 메타데이블과 메타메소드 테이블 하나는 메타테이블 하나를 가질 수 있다. 그 메타테이블은 ‘연산자 오버로딩’을 제공한다. 클래스 와 유사한 테이블과 상속 클래스는 (루아)에 내장되어 있지 않다. 클래스는 테이블과 메타테이블을 사용하여 만들어진다. Dog는 클래스처럼 동작한다. (Dog는 테이블 형식이다.) function 테이블이름:함수(…)는 function 테이블이름.함수(self,…) 동일하다. ‘:’은 단지 함수의 첫 인자에 self를 추가한다. newObj(새 객체)는 클래…","frontmatter":{"categories":"Language","title":"Lua 언어 정리","date":"May 29, 2020"},"fields":{"slug":"/Lua/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"Zer0Luck","bio":{"role":"Hacker","description":["Play!","We!","Exploit!"],"thumbnail":"sample.png"},"social":{"github":"https://github.com/dnsdudrla97","linkedIn":"","email":""}}}}},"pageContext":{}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437","3350743975"]}