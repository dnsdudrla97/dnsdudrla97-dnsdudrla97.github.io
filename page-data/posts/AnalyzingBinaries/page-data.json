{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/AnalyzingBinaries",
    "result": {"pageContext":{"currentCategory":"AnalyzingBinaries","categories":["All","AnalyzingBinaries","Mobile","CTF","Tools","troubleshooting","Windows","Theory","Talk","Language"],"edges":[{"node":{"id":"ad736f49-eb3e-5545-a7cb-d869773bd0e6","excerpt":"The Loader  를 로드하고 로더와 상호 작용 하는 방법에 대해 알아보자 예제로 사용할 바이너리는 다음 링크에서 다운로드: dnsdudrla97/angr-doc Loaded Objects CLE 로더 (cle.Loader)는 로드된 바이너리 객체의 전체 그룹을 나타내며 단일 메모리 공간에 로드되고 매핑된다. 각 바이너리 객체는 파일 형식(cle.Backend의 subclass)을 처리할 수 있는 loader backend에 의해 로드된다. 예를 들어, cle.ELF 는 ELF 바이너리 파일을 로드 하는 데 사용된다. 메모리에 로드된 바이너리 수 와 일치하지 않는 객체도 있을 것이며 예를 들어,  지원을 제공하는 데 사용되는 객체와 확인되지 않은 Symbols을 제공하는데 사용되는 외부 객체 CLE가  와 함께 로드한 전체 목록뿐만 아니라 다음과 같이 몇 가지 추가 표적 분류도 얻을 수있다. 해당 객체들과 직접 상호 작용하여 메타 데이터를 추출 할 수 있다. Symbols an…","fields":{"slug":"/angr-2_theori/"},"frontmatter":{"categories":"AnalyzingBinaries","title":"angr 바이너리 분석 활용 방안 2","date":"August 14, 2020"}},"next":{"fields":{"slug":"/angr-3_theori/"}},"previous":null},{"node":{"id":"a1cbd834-e57e-573a-b4e3-0cc76df63a00","excerpt":"angr fauxware 문제 풀이 문제 바이너리 dnsdudrla97/angr-doc data 섹션  authenticate 함수   전역 변수가 가리키고 있는 문자열 과 유저 이름을  함수를 바탕으로 비교를 통해 같으면 1을 반환하고 아닐시 유저 이름에 해당 하는 파일 이름을  함수를 바탕으로 읽고 해당 값과 유저 패스워드와 비교하여 같으면 1을 반환 아니면 0을 반환한다. 우리가 피해야할 주소 값은  임을 알 수있다.  접근해야 하는 위치  기본적으로 앞에서  함수에서 반환된 값이 1 일 경우  함수를 호출하게 된다.  angr solve 1  angr sovle 2  data 섹션 authenticate 함수 접근해야 하는 위치 angr solve 1 angr sovle 2","fields":{"slug":"/angr-3_theori/"},"frontmatter":{"categories":"AnalyzingBinaries","title":"angr 바이너리 분석 활용 방안 3","date":"August 14, 2020"}},"next":{"fields":{"slug":"/droidCTF_droid_ctf_writeup/"}},"previous":{"fields":{"slug":"/angr-2_theori/"}}},{"node":{"id":"2dc19ec9-63a6-5f68-aff2-ea70f9c0a6e9","excerpt":"프로젝트 선택 loader 이진 파일에서 가상 주소 공간에서 표현하는 것은 매우 복잡하다. 이를 처리하기 위하여 CLE 모듈이 있다. 로더라고 하는 CLE의 결과는 속성에서 사용할 수 있으며  프로그램과 함께 로드된 공유 라이버리를 보고 로드된 주소 공간에 대한 기본 쿼리를 숭행하는데 사용할 수 있다. p.factory (생성자들)  에는 많은 클래스가 있으며 대부분 프로젝트를 인스턴스화해야 한다. 모든 곳에서 프로젝트를 사용할 시 자주 사용하고 싶은 공통 객체에 대한 몇 가지 편리한 생성자를 제공한다.  block  주어진 주소에서 기본 코드 블록을 추출하는데 사용된다. state 객체는 프로그램의 “초기화 이미지” 만을 나타낸다.  로 실행을 수행할 때 시뮬레이션 된 프로그램 상태를 나타내는 특정 개체인  로 작업한다.  는 프로그램의 메모리, 레지스터, 파일 시스템 데이터를 포함하고 있다. 해당 값들은 파이썬의 정수가 아니다. 이다. 파이썬 정수는 CPU의 단어와 동일한 의미…","fields":{"slug":"/angr-1_theori/"},"frontmatter":{"categories":"AnalyzingBinaries","title":"angr 바이너리 분석 활용 방안 1","date":"August 14, 2020"}},"next":{"fields":{"slug":"/gdb_tools/"}},"previous":{"fields":{"slug":"/sharkyCTF_z3z3_ctf_writeup/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}